<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <PublishSingleFile>true</PublishSingleFile>
    <PublishTrimmed>true</PublishTrimmed>
    <PackageId>GraphLinq.MachineLearning</PackageId>
    <Version>1.0.0</Version>
    <Authors>GraphLinq Team</Authors>
    <Company>GraphLinq</Company>
    <PackageDescription>This package allow the GraphLinq Engine to use ML.NET</PackageDescription>
    <RepositoryUrl>https://github.com/GraphLinq/GraphLinq.MachineLearning</RepositoryUrl>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <OutputPath>bin\Debug\netcoreapp3.1\</OutputPath>
    <GenerateSerializationAssemblies>Auto</GenerateSerializationAssemblies>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="AngleSharp" Version="1.0.0-alpha-844" />
    <PackageReference Include="Costura.Fody" Version="5.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.ML" Version="2.0.1" />
    <PackageReference Include="Microsoft.ML.FastTree" Version="2.0.1" />
    <PackageReference Include="Microsoft.ML.TimeSeries" Version="2.0.1" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\GraphLinq.Encoding\NodeBlock.Engine.Encoding.csproj" />
    <ProjectReference Include="..\GraphLinq.Engine\NodeBlock.Engine.csproj" />
  </ItemGroup>
  <ItemGroup Label="SentimentModel">
    <None Include="SentimentModel.consumption.cs">
      <DependentUpon>SentimentModel.mbconfig</DependentUpon>
    </None>
    <None Include="SentimentModel.training.cs">
      <DependentUpon>SentimentModel.mbconfig</DependentUpon>
    </None>
    <None Include="SentimentModel.zip">
      <DependentUpon>SentimentModel.mbconfig</DependentUpon>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup Label="SpamModel">
    <None Include="SpamModel.consumption.cs">
      <DependentUpon>SpamModel.mbconfig</DependentUpon>
    </None>
    <None Include="SpamModel.training.cs">
      <DependentUpon>SpamModel.mbconfig</DependentUpon>
    </None>
    <None Include="SpamModel.zip">
      <DependentUpon>SpamModel.mbconfig</DependentUpon>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup Label="PriceForecastModel">
    <None Include="PriceForecastModel.consumption.cs">
      <DependentUpon>PriceForecastModel.mbconfig</DependentUpon>
    </None>
    <None Include="PriceForecastModel.training.cs">
      <DependentUpon>PriceForecastModel.mbconfig</DependentUpon>
    </None>
    <None Include="PriceForecastModel.zip">
      <DependentUpon>PriceForecastModel.mbconfig</DependentUpon>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Condition=" '$(OS)' != 'Unix' " Command="copy /Y &quot;$(TargetDir)$(ProjectName).dll&quot; &quot;$(SolutionDir)\GraphLinq.CLI\bin\Debug\netcoreapp3.1\plugins&quot;" />
    <Exec Condition=" '$(OS)' != 'Unix' " Command="copy /Y &quot;SentimentModel.zip&quot; &quot;$(SolutionDir)\GraphLinq.CLI\bin\Debug\netcoreapp3.1&quot;" />
    <Exec Condition=" '$(OS)' != 'Unix' " Command="copy /Y &quot;SpamModel.zip&quot; &quot;$(SolutionDir)\GraphLinq.CLI\bin\Debug\netcoreapp3.1&quot;" />
	<Exec Condition=" '$(OS)' != 'Unix' " Command="copy /Y &quot;PriceForecastModel.zip&quot; &quot;$(SolutionDir)\GraphLinq.CLI\bin\Debug\netcoreapp3.1&quot;" />
  </Target>
</Project>